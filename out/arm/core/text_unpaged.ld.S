	*(.text.read_daif)
	*(.text.pgt_flush_ctx)
	*(.text.is_user_ta_ctx)
	*(.text.to_user_ta_ctx)
	*(.text.mobj_get_va)
	*(.text.mobj_get_pa)
	*(.text.mobj_free)
	*(.text.tee_pager_rem_uta_areas)
	*(.text.tee_svc_kaddr_to_uref)
	*(.text.elf_flags_to_mattr)
	*(.text.config_initial_paging)
	*(.text.config_final_paging)
	*(.text.load_elf_segments)
	*(.text.alloc_ta_mem)
	*(.text.load_elf)
	*(.text.ta_load)
	*(.text.init_utee_param)
	*(.text.update_from_utee_param)
	*(.text.clear_vfp_state)
	*(.text.user_ta_enter)
	*(.text.user_ta_enter_open_session)
	*(.text.user_ta_enter_invoke_cmd)
	*(.text.user_ta_enter_close_session)
	*(.text.user_ta_dump_state)
	*(.text.user_ta_ctx_destroy)
	*(.text.user_ta_get_instance_id)
	*(.text.tee_ta_init_user_ta_session)
	*(.text.sn_config_initial_paging)
	*(.text.sn_config_final_paging)
	*(.text.sn_load_elf_segments)
	*(.text.sn_load_elf)
	*(.text.tee_ta_load)
	*(.text.is_pseudo_ta_ctx)
	*(.text.to_pseudo_ta_ctx)
	*(.text.validate_in_param)
	*(.text.copy_in_param)
	*(.text.update_out_param)
	*(.text.pseudo_ta_enter_open_session)
	*(.text.pseudo_ta_enter_invoke_cmd)
	*(.text.pseudo_ta_enter_close_session)
	*(.text.pseudo_ta_destroy)
	*(.text.tee_ta_init_pseudo_ta_session)
	*(.text.copy_ehdr)
	*(.text.get_shdr_type)
	*(.text.copy_phdr)
	*(.text.advance_to)
	*(.text.copy_to)
	*(.text.alloc_and_copy_to)
	*(.text.elf_load_init)
	*(.text.e32_load_ehdr)
	*(.text.e64_load_ehdr)
	*(.text.load_head)
	*(.text.elf_load_head)
	*(.text.elf_load_get_next_segment)
	*(.text.e32_process_rel)
	*(.text.e64_process_rel)
	*(.text.elf_load_body)
	*(.text.elf_load_final)
	*(.text.sn_elf_load_init)
	*(.text.sn_e64_load_ehdr)
	*(.text.sn_load_head)
	*(.text.sn_elf_load_head)
	*(.text.sn_elf_load_body)
	*(.text.sn_elf_load_final)
	*(.text.tee_time_get_sys_time)
	*(.text.tee_time_get_sys_time_protection_level)
	*(.text.tee_time_wait)
	*(.text.tee_time_get_ree_time)
	*(.text.tee_otp_get_die_id)
	*(.text.read_cntpct)
	*(.text.plat_prng_add_jitter_entropy)
	*(.text.thread_foreign_intr_disabled)
	*(.text.spinlock_count_incr)
	*(.text.spinlock_count_decr)
	*(.text.have_spinlock)
	*(.text.dcache_cleaninv_range)
	*(.text.dcache_clean_range)
	*(.text.dcache_inv_range)
	*(.text.do_dcsw_op)
	*(.text.dcache_op_all)
	*(.text.icache_inv_all)
	*(.text.icache_inv_range)
	*(.text.thread_asm)
	*(.text.write_daif)
	*(.text.tee_ta_gprof_sample_pc)
	*(.text.tee_ta_update_session_utime_suspend)
	*(.text.tee_ta_update_session_utime_resume)
	*(.text.reg_pair_to_64)
	*(.text.reg_pair_from_64)
	*(.text.mobj_matches)
	*(.text.mobj_is_nonsec)
	*(.text.assert_have_no_spinlock)
	*(.text.cpu_spin_lock)
	*(.text.cpu_spin_unlock)
	*(.text.tee_pager_release_phys)
	*(.text.thread_check_canaries)
	*(.text.lock_global)
	*(.text.unlock_global)
	*(.text.thread_get_exceptions)
	*(.text.thread_set_exceptions)
	*(.text.thread_mask_exceptions)
	*(.text.thread_unmask_exceptions)
	*(.text.thread_get_core_local)
	*(.text.thread_lazy_save_ns_vfp)
	*(.text.thread_lazy_restore_ns_vfp)
	*(.text.init_regs)
	*(.text.thread_alloc_and_run)
	*(.text.copy_a0_to_a5)
	*(.text.is_from_user)
	*(.text.is_user_mode)
	*(.text.thread_resume_from_rpc)
	*(.text.thread_handle_fast_smc)
	*(.text.thread_handle_std_smc)
	*(.text.thread_get_tmp_sp)
	*(.text.thread_get_saved_thread_sp)
	*(.text.thread_stack_start)
	*(.text.thread_stack_size)
	*(.text.thread_state_free)
	*(.text.release_unused_kernel_stack)
	*(.text.thread_state_suspend)
	*(.text.set_tmp_stack)
	*(.text.set_abt_stack)
	*(.text.thread_get_id_may_fail)
	*(.text.thread_get_id)
	*(.text.init_sec_mon)
	*(.text.thread_init_per_cpu)
	*(.text.thread_get_tsd)
	*(.text.thread_get_ctx_regs)
	*(.text.thread_kernel_save_vfp)
	*(.text.thread_kernel_restore_vfp)
	*(.text.thread_user_enable_vfp)
	*(.text.thread_user_save_vfp)
	*(.text.thread_user_clear_vfp)
	*(.text.get_spsr)
	*(.text.thread_enter_user_mode)
	*(.text.thread_add_mutex)
	*(.text.thread_rem_mutex)
	*(.text.thread_disable_prealloc_rpc_cache)
	*(.text.thread_enable_prealloc_rpc_cache)
	*(.text.thread_rpc_free_arg)
	*(.text.thread_rpc_alloc_arg)
	*(.text.get_rpc_arg)
	*(.text.thread_rpc_cmd)
	*(.text.thread_rpc_free)
	*(.text.thread_rpc_alloc)
	*(.text.thread_rpc_alloc_payload)
	*(.text.thread_rpc_free_payload)
	*(.text.get_tee_core_pos)
	*(.text.get_tee_cpu)
	*(.text.set_proc_map)
	*(.text.read_contextidr_el1)
	*(.text.read_ttbr0_el1)
	*(.text.read_ttbr1_el1)
	*(.text.read_esr_el1)
	*(.text.read_far_el1)
	*(.text.tee_pager_handle_fault)
	*(.text.get_current_ta_exidx)
	*(.text.__print_stack_unwind_arm32)
	*(.text.__print_stack_unwind_arm64)
	*(.text.abort_type_to_str)
	*(.text.fault_to_str)
	*(.text.__print_abort_info)
	*(.text.__abort_print)
	*(.text.abort_print)
	*(.text.abort_print_error)
	*(.text.set_abort_info)
	*(.text.handle_user_ta_panic)
	*(.text.handle_user_ta_vfp)
	*(.text.abort_is_user_exception)
	*(.text.is_abort_in_abort_handler)
	*(.text.is_vfp_fault)
	*(.text.get_fault_type)
	*(.text.abort_handler)
	*(.text.isb)
	*(.text.read_cpacr_el1)
	*(.text.write_cpacr_el1)
	*(.text.read_fpcr)
	*(.text.write_fpcr)
	*(.text.read_fpsr)
	*(.text.write_fpsr)
	*(.text.vfp_is_enabled)
	*(.text.vfp_enable)
	*(.text.vfp_disable)
	*(.text.vfp_lazy_save_state_init)
	*(.text.vfp_lazy_save_state_final)
	*(.text.vfp_lazy_restore_state)
	*(.text.vfp_asm)
	*(.text.cpu_spin_trylock)
	*(.text.trace_ext_puts)
	*(.text.trace_ext_get_thread_id)
	*(.text.wq_wait_init)
	*(.text.mutex_init)
	*(.text.__mutex_lock)
	*(.text.__mutex_unlock)
	*(.text.mutex_unlock)
	*(.text.mutex_lock)
	*(.text.condvar_init)
	*(.text.condvar_destroy)
	*(.text.cv_signal)
	*(.text.condvar_signal)
	*(.text.condvar_broadcast)
	*(.text.__condvar_wait)
	*(.text.condvar_wait)
	*(.text.cpu_spin_lock_xsave)
	*(.text.cpu_spin_unlock_xrestore)
	*(.text.slist_add_tail)
	*(.text.wq_wait_init_condvar)
	*(.text.wq_wait_final)
	*(.text.wq_wake_one)
	*(.text.wq_promote_condvar)
	*(.text.wq_have_condvar)
	*(.text.pm_do_nothing)
	*(.text.plat_cpu_reset_late)
	*(.text.main_secondary_init_gic)
	*(.text.init_vfp_nsec)
	*(.text.init_vfp_sec)
	*(.text.init_secondary_helper)
	*(.text.generic_boot_cpu_on_handler)
	*(.text.cpu_on_handler)
	*(.text.expand_prel31)
	*(.text.find_index)
	*(.text.unwind_exec_read_byte)
	*(.text.unwind_exec_insn)
	*(.text.unwind_tab)
	*(.text.unwind_stack_arm32)
	*(.text.unwind_stack_arm64)
	*(.text.print_kernel_stack)
	*(.text.dummy.tee_svc_handler)
	*(.text.dummy.tee_entry_std)
	*(.text.dummy.__thread_std_smc_entry)
	*(.text.dummy.__wq_rpc)
	*(.text.proc_check_canaries)
	*(.text.proc_schedule)
	*(.text.get_cur_proc)
	*(.text.enqueue)
	*(.text.enqueue_head)
	*(.text.rex_debug)
	*(.text.alloc_migrate_proc)
	*(.text.ipi_mg_handle)
	*(.text.ipi_mb_handle)
	*(.text.raise_ipi)
	*(.text.write_at_s1e1r)
	*(.text.read_sctlr_el1)
	*(.text.read_par_el1)
	*(.text.core_mmu_va2idx)
	*(.text.core_mmu_idx2va)
	*(.text.core_mmu_get_block_offset)
	*(.text.core_mmu_is_dynamic_vaspace)
	*(.text.mobj_update_mapping)
	*(.text.mobj_is_paged)
	*(.text.core_mmap_is_end_of_table)
	*(.text._pbuf_is_inside)
	*(.text.pa_is_in_map)
	*(.text.va_is_in_map)
	*(.text.pbuf_inside_map_area)
	*(.text.find_map_by_type_and_pa)
	*(.text.find_map_by_va)
	*(.text.find_map_by_pa)
	*(.text.pbuf_is_special_mem)
	*(.text.get_discovered_nsec_ddr)
	*(.text.pbuf_is_nsec_ddr)
	*(.text.pbuf_is_sdp_mem)
	*(.text.core_mmu_type_to_attr)
	*(.text.core_mmu_mattr_is_ok)
	*(.text.core_pbuf_is)
	*(.text.core_vbuf_is)
	*(.text.core_va2pa_helper)
	*(.text.map_pa2va)
	*(.text.cache_op_inner)
	*(.text.core_mmu_set_entry)
	*(.text.set_region)
	*(.text.set_pg_region)
	*(.text.core_mmu_unmap_pages)
	*(.text.core_mmu_populate_user_map)
	*(.text.arm_va2pa_helper)
	*(.text.check_pa_matches_va)
	*(.text.virt_to_phys)
	*(.text.check_va_matches_pa)
	*(.text.phys_to_virt_ta_vaspace)
	*(.text.phys_to_virt_tee_ram)
	*(.text.phys_to_virt)
	*(.text.phys_to_virt_io)
	*(.text.cpu_mmu_enabled)
	*(.text.sn_core_mmu_populate_user_map)
	*(.text.pgt_check_avail)
	*(.text.mobj_get_cattr)
	*(.text.mobj_is_secure)
	*(.text.tee_pager_assign_uta_tables)
	*(.text.tee_mmu_umap_add_param)
	*(.text.tee_mmu_umap_set_vas)
	*(.text.tee_mmu_init)
	*(.text.alloc_pgt)
	*(.text.tee_mmu_map_stack)
	*(.text.tee_mmu_map_add_segment)
	*(.text.tee_mmu_map_clear)
	*(.text.clear_param_map)
	*(.text.param_mem_to_user_va)
	*(.text.tee_mmu_map_param)
	*(.text.tee_mmu_final)
	*(.text.tee_mmu_is_vbuf_inside_ta_private)
	*(.text.tee_mmu_vbuf_to_mobj_offs)
	*(.text.tee_mmu_user_va2pa_attr)
	*(.text.tee_mmu_user_va2pa_helper)
	*(.text.tee_mmu_user_pa2va_helper)
	*(.text.tee_mmu_check_access_rights)
	*(.text.tee_mmu_set_ctx)
	*(.text.tee_mmu_get_ctx)
	*(.text.tee_mmu_get_load_addr)
	*(.text.sn_tee_mmu_map_stack)
	*(.text.sn_tee_mmu_map_clear)
	*(.text.sn_tee_mmu_set_ctx)
	*(.text.sn_tee_mmu_get_load_addr)
	*(.text.sn_tee_mmu_init)
	*(.text.sn_tee_mmu_map_add_segment)
	*(.text.dsb)
	*(.text.write_ttbr0_el1)
	*(.text.write_ttbr1_el1)
	*(.text.write_tcr_el1)
	*(.text.write_mair_el1)
	*(.text.mattr_to_desc)
	*(.text.core_init_mmu_regs)
	*(.text.core_mmu_set_info_table)
	*(.text.core_mmu_get_user_pgdir)
	*(.text.core_mmu_create_user_map)
	*(.text.core_mmu_find_table)
	*(.text.core_mmu_set_entry_primitive)
	*(.text.core_mmu_user_va_range_is_defined)
	*(.text.core_mmu_get_user_va_range)
	*(.text.core_mmu_user_mapping_is_active)
	*(.text.core_mmu_get_user_map)
	*(.text.core_mmu_set_user_map)
	*(.text.core_mmu_get_fault_type)
	*(.text.sn_core_mmu_create_user_map)
	*(.text.sn_core_mmu_get_user_pgdir)
	*(.text.tee_mm_add)
	*(.text.tee_mm_stats_allocated)
	*(.text.tee_mm_get_pool_stats)
	*(.text.update_max_allocated)
	*(.text.tee_mm_alloc)
	*(.text.tee_mm_free)
	*(.text.tee_mm_get_smem)
	*(.text.pop_from_free_list)
	*(.text.push_to_free_list)
	*(.text.pgt_free_unlocked)
	*(.text.pop_from_some_list)
	*(.text.pgt_alloc_unlocked)
	*(.text.pgt_alloc)
	*(.text.pgt_free)
	*(.text.sn_pgt_free_unlocked)
	*(.text.sn_pgt_alloc_unlocked)
	*(.text.sn_pgt_alloc)
	*(.text.mobj_phys_get_va)
	*(.text.mobj_phys_get_pa)
	*(.text.mobj_phys_get_cattr)
	*(.text.mobj_phys_matches)
	*(.text.mobj_phys_free)
	*(.text.to_mobj_phys)
	*(.text.mobj_virt_get_va)
	*(.text.mobj_virt_assert_type)
	*(.text.mobj_mm_offs)
	*(.text.mobj_mm_get_va)
	*(.text.mobj_mm_get_pa)
	*(.text.mobj_mm_get_cattr)
	*(.text.mobj_mm_matches)
	*(.text.mobj_mm_free)
	*(.text.to_mobj_mm)
	*(.text.mobj_mm_alloc)
	*(.text.mobj_reg_shm_get_pa)
	*(.text.mobj_reg_shm_free)
	*(.text.mobj_reg_shm_get_cattr)
	*(.text.to_mobj_reg_shm)
	*(.text.mobj_mapped_shm_get_pa)
	*(.text.mobj_mapped_shm_get_va)
	*(.text.mobj_mapped_shm_free)
	*(.text.mobj_mapped_shm_get_cattr)
	*(.text.mobj_mapped_shm_matches)
	*(.text.to_mobj_mapped_shm)
	*(.text.mobj_shm_get_va)
	*(.text.mobj_shm_get_pa)
	*(.text.mobj_shm_matches)
	*(.text.mobj_shm_free)
	*(.text.to_mobj_shm)
	*(.text.mobj_shm_alloc)
	*(.text.arch_svc_asm)
	*(.text.tee_svc_sys_return_helper)
	*(.text.tee_proc_svc_handler)
	*(.text.msg_param_get_buf_size)
	*(.text.get_instance_id)
	*(.text.socket_open)
	*(.text.socket_close)
	*(.text.socket_send)
	*(.text.socket_recv)
	*(.text.socket_ioctl)
	*(.text.pta_socket_open_session)
	*(.text.pta_socket_close_session)
	*(.text.pta_socket_invoke_command)
	*(.text.core_mmu_is_shm_cached)
	*(.text.tee_entry_get_shm_config)
	*(.text.tee_entry_fastcall_l2cc_mutex)
	*(.text.tee_entry_exchange_capabilities)
	*(.text.tee_entry_disable_shm_cache)
	*(.text.tee_entry_enable_shm_cache)
	*(.text.tee_entry_boot_secondary)
	*(.text.tee_entry_fast)
	*(.text.tee_entry_generic_get_api_call_count)
	*(.text.tee_entry_get_api_call_count)
	*(.text.tee_entry_get_api_uuid)
	*(.text.tee_entry_get_api_revision)
	*(.text.tee_entry_get_os_uuid)
	*(.text.tee_entry_get_os_revision)
	*(.text.cache_op_outer)
	*(.text.cache_operation)
	*(.text.test_trace)
	*(.text.test_entry_params)
	*(.text.test_inject_sdp)
	*(.text.test_transform_sdp)
	*(.text.test_dump_sdp)
	*(.text.create_ta)
	*(.text.destroy_ta)
	*(.text.open_session)
	*(.text.close_session)
	*(.text.invoke_command)
	*(.text.self_test_add_overflow)
	*(.text.self_test_sub_overflow)
	*(.text.self_test_mul_unsigned_overflow)
	*(.text.self_test_mul_signed_overflow)
	*(.text.self_test_division)
	*(.text.self_test_malloc)
	*(.text.core_self_tests)
	*(.text.ihandler_ok)
	*(.text.test_sgi)
	*(.text.test_spi)
	*(.text.test_ppi)
	*(.text.interrupt_tests)
	*(.text.test_get_offs_size)
	*(.text.test_read_init)
	*(.text.uint_to_ptr)
	*(.text.test_read_final)
	*(.text.test_write_init)
	*(.text.test_write_final)
	*(.text.val_from_bn_n_salt)
	*(.text.write_block)
	*(.text.read_block)
	*(.text.do_range)
	*(.text.do_range_backwards)
	*(.text.htree_test_rewrite)
	*(.text.core_fs_htree_tests)
	*(.text.tee_pager_get_stats)
	*(.text.get_alloc_stats)
	*(.text.get_pager_stats)
	*(.text.read_cntpct_el0)
	*(.text.read_cntfrq_el0)
	*(.text.read_cntps_ctl_el1)
	*(.text.write_cntps_cval_el1)
	*(.text.write_cntps_ctl_el1)
	*(.text.generic_boot_get_handlers)
	*(.text.main_fiq)
	*(.text.console_itr_cb)
	*(.text.reset_secure_timer)
	*(.text.timer_itr_cb)
	*(.text.get_prop_endorsement)
	*(.text._assert_log)
	*(.text._assert_break)
	*(.text.console_putc)
	*(.text.console_flush)
	*(.text.msg_param_init_memparam)
	*(.text.lock_single_instance)
	*(.text.unlock_single_instance)
	*(.text.has_single_instance_lock)
	*(.text.tee_ta_try_set_busy)
	*(.text.tee_ta_set_busy)
	*(.text.tee_ta_clear_busy)
	*(.text.dec_session_ref_count)
	*(.text.tee_ta_put_session)
	*(.text.find_session)
	*(.text.tee_ta_get_session)
	*(.text.tee_ta_unlink_session)
	*(.text.tee_ta_context_find)
	*(.text.check_client)
	*(.text.check_params)
	*(.text.set_invoke_timeout)
	*(.text.tee_ta_close_session)
	*(.text.tee_ta_init_session_with_context)
	*(.text.tee_ta_init_session)
	*(.text.tee_ta_open_session)
	*(.text.tee_ta_invoke_command)
	*(.text.tee_ta_session_is_cancelled)
	*(.text.update_current_ctx)
	*(.text.tee_ta_push_current_session)
	*(.text.tee_ta_pop_current_session)
	*(.text.tee_ta_get_current_session)
	*(.text.tee_ta_get_calling_session)
	*(.text.dump_state)
	*(.text.tee_ta_dump_current)
	*(.text.tee_ta_exec)
	*(.text.is_valid_conf_and_notnull_size)
	*(.text._core_is_buffer_inside)
	*(.text._core_is_buffer_intersect)
	*(.text.__do_panic)
	*(.text.find_handler)
	*(.text.itr_handle)
	*(.text.itr_add)
	*(.text.itr_enable)
	*(.text.itr_raise_pi)
	*(.text.itr_raise_sgi)
	*(.text.itr_set_affinity)
	*(.text.tee_hash_get_digest_size)
	*(.text.tee_hash_createdigest)
	*(.text.tee_mac_get_digest_size)
	*(.text.tee_cipher_get_block_size)
	*(.text.tee_do_cipher_update)
	*(.text.tee_aes_cbc_cts_update)
	*(.text.tee_prng_add_entropy)
	*(.text.plat_prng_add_jitter_entropy_norpc)
	*(.text.hkdf_extract)
	*(.text.hkdf_expand)
	*(.text.tee_cryp_hkdf)
	*(.text.tee_cryp_concat_kdf)
	*(.text.pbkdf2_f)
	*(.text.tee_cryp_pbkdf2)
	*(.text.tee_svc_uref_to_vaddr)
	*(.text.tee_svc_uref_to_kaddr)
	*(.text.syscall_log)
	*(.text.syscall_not_supported)
	*(.text.get_prop_tee_dev_id)
	*(.text.get_prop_tee_sys_time_prot_level)
	*(.text.get_prop_client_id)
	*(.text.get_prop_ta_app_id)
	*(.text.get_prop_set)
	*(.text.get_prop_struct)
	*(.text.syscall_get_property)
	*(.text.syscall_get_property_name_to_index)
	*(.text.utee_param_to_param)
	*(.text.alloc_temp_sec_mem)
	*(.text.tee_svc_copy_param)
	*(.text.tee_svc_update_out_param)
	*(.text.syscall_open_ta_session)
	*(.text.syscall_close_ta_session)
	*(.text.syscall_invoke_ta_command)
	*(.text.syscall_check_access_rights)
	*(.text.tee_svc_copy_from_user)
	*(.text.tee_svc_copy_to_user)
	*(.text.tee_svc_copy_kaddr_to_uref)
	*(.text.syscall_get_cancellation_flag)
	*(.text.syscall_unmask_cancellation)
	*(.text.syscall_mask_cancellation)
	*(.text.syscall_wait)
	*(.text.syscall_get_time)
	*(.text.syscall_set_ta_time)
	*(.text.syscall_tee_log)
	*(.text.syscall_idle)
	*(.text.syscall_test)
	*(.text.syscall_migrate)
	*(.text.op_u32_to_binary_helper)
	*(.text.op_u32_from_binary_helper)
	*(.text.op_attr_secret_value_from_user)
	*(.text.op_attr_secret_value_to_user)
	*(.text.op_attr_secret_value_to_binary)
	*(.text.op_attr_secret_value_from_binary)
	*(.text.op_attr_secret_value_from_obj)
	*(.text.op_attr_secret_value_clear)
	*(.text.op_attr_bignum_from_user)
	*(.text.op_attr_bignum_to_user)
	*(.text.op_attr_bignum_to_binary)
	*(.text.op_attr_bignum_from_binary)
	*(.text.op_attr_bignum_from_obj)
	*(.text.op_attr_bignum_clear)
	*(.text.op_attr_bignum_free)
	*(.text.op_attr_value_from_user)
	*(.text.op_attr_value_to_user)
	*(.text.op_attr_value_to_binary)
	*(.text.op_attr_value_from_binary)
	*(.text.op_attr_value_from_obj)
	*(.text.op_attr_value_clear)
	*(.text.syscall_cryp_obj_get_info)
	*(.text.syscall_cryp_obj_restrict_usage)
	*(.text.tee_svc_cryp_obj_find_type_attr_idx)
	*(.text.tee_svc_find_type_props)
	*(.text.set_attribute)
	*(.text.get_attribute)
	*(.text.syscall_cryp_obj_get_attr)
	*(.text.tee_obj_attr_free)
	*(.text.tee_obj_attr_clear)
	*(.text.tee_obj_attr_to_binary)
	*(.text.tee_obj_attr_from_binary)
	*(.text.tee_obj_attr_copy_from)
	*(.text.tee_obj_set_type)
	*(.text.syscall_cryp_obj_alloc)
	*(.text.syscall_cryp_obj_close)
	*(.text.syscall_cryp_obj_reset)
	*(.text.copy_in_attrs)
	*(.text.tee_svc_cryp_check_attr)
	*(.text.tee_svc_cryp_obj_populate_type)
	*(.text.syscall_cryp_obj_populate)
	*(.text.syscall_cryp_obj_copy)
	*(.text.tee_svc_obj_generate_key_rsa)
	*(.text.tee_svc_obj_generate_key_dsa)
	*(.text.tee_svc_obj_generate_key_dh)
	*(.text.tee_svc_obj_generate_key_ecc)
	*(.text.syscall_obj_generate_key)
	*(.text.tee_svc_cryp_get_state)
	*(.text.cryp_state_free)
	*(.text.tee_svc_cryp_check_key_type)
	*(.text.syscall_cryp_state_alloc)
	*(.text.syscall_cryp_state_copy)
	*(.text.tee_svc_cryp_free_states)
	*(.text.syscall_cryp_state_free)
	*(.text.syscall_hash_init)
	*(.text.syscall_hash_update)
	*(.text.syscall_hash_final)
	*(.text.syscall_cipher_init)
	*(.text.tee_svc_cipher_update_helper)
	*(.text.syscall_cipher_update)
	*(.text.syscall_cipher_final)
	*(.text.get_hkdf_params)
	*(.text.get_concat_kdf_params)
	*(.text.get_pbkdf2_params)
	*(.text.syscall_cryp_derive_key)
	*(.text.syscall_cryp_random_number_generate)
	*(.text.syscall_authenc_init)
	*(.text.syscall_authenc_update_aad)
	*(.text.syscall_authenc_update_payload)
	*(.text.syscall_authenc_enc_final)
	*(.text.syscall_authenc_dec_final)
	*(.text.pkcs1_get_salt_len)
	*(.text.syscall_asymm_operate)
	*(.text.syscall_asymm_verify)
	*(.text.file_ops)
	*(.text.tee_svc_storage_get_enum)
	*(.text.tee_svc_close_enum)
	*(.text.tee_svc_storage_create_filename_dfh)
	*(.text.tee_svc_storage_remove_corrupt_obj)
	*(.text.tee_svc_storage_read_head)
	*(.text.syscall_storage_obj_open)
	*(.text.tee_svc_storage_init_file)
	*(.text.syscall_storage_obj_create)
	*(.text.syscall_storage_obj_del)
	*(.text.syscall_storage_obj_rename)
	*(.text.syscall_storage_alloc_enum)
	*(.text.syscall_storage_free_enum)
	*(.text.syscall_storage_reset_enum)
	*(.text.tee_svc_storage_set_enum)
	*(.text.syscall_storage_start_enum)
	*(.text.syscall_storage_next_enum)
	*(.text.syscall_storage_obj_read)
	*(.text.syscall_storage_obj_write)
	*(.text.syscall_storage_obj_trunc)
	*(.text.syscall_storage_obj_seek)
	*(.text.tee_svc_storage_close_all_enum)
	*(.text.pos_to_block_num)
	*(.text.out_of_place_write)
	*(.text.get_offs_size)
	*(.text.ree_fs_rpc_read_init)
	*(.text.ree_fs_rpc_write_init)
	*(.text.ree_fs_ftruncate_internal)
	*(.text.ree_fs_read_primitive)
	*(.text.ree_fs_read)
	*(.text.ree_fs_write_primitive)
	*(.text.ree_fs_open_primitive)
	*(.text.ree_fs_close_primitive)
	*(.text.ree_dirf_commit_writes)
	*(.text.open_dirh)
	*(.text.commit_dirh_writes)
	*(.text.close_dirh)
	*(.text.get_dirh)
	*(.text.put_dirh_primitive)
	*(.text.put_dirh)
	*(.text.ree_fs_open)
	*(.text.set_name)
	*(.text.ree_fs_close)
	*(.text.ree_fs_create)
	*(.text.ree_fs_write)
	*(.text.ree_fs_rename)
	*(.text.ree_fs_remove)
	*(.text.ree_fs_truncate)
	*(.text.ree_fs_opendir_rpc)
	*(.text.ree_fs_closedir_rpc)
	*(.text.ree_fs_readdir_rpc)
	*(.text.rpc_read)
	*(.text.rpc_read_head)
	*(.text.rpc_read_node)
	*(.text.rpc_write)
	*(.text.rpc_write_head)
	*(.text.rpc_write_node)
	*(.text.traverse_post_order)
	*(.text.htree_traverse_post_order)
	*(.text.node_id_to_level)
	*(.text.find_closest_node)
	*(.text.find_node)
	*(.text.get_node)
	*(.text.get_idx_from_counter)
	*(.text.init_head_from_data)
	*(.text.init_tree_from_data)
	*(.text.calc_node_hash)
	*(.text.authenc_init)
	*(.text.authenc_decrypt_final)
	*(.text.authenc_encrypt_final)
	*(.text.verify_root)
	*(.text.verify_node)
	*(.text.verify_tree)
	*(.text.init_root_node)
	*(.text.tee_fs_htree_open)
	*(.text.tee_fs_htree_get_meta)
	*(.text.free_node)
	*(.text.tee_fs_htree_close)
	*(.text.htree_sync_node_to_storage)
	*(.text.update_root)
	*(.text.tee_fs_htree_sync_to_storage)
	*(.text.get_block_node)
	*(.text.tee_fs_htree_write_block)
	*(.text.tee_fs_htree_read_block)
	*(.text.tee_fs_htree_truncate)
	*(.text.maybe_grow_files)
	*(.text.set_file)
	*(.text.clear_file)
	*(.text.test_file)
	*(.text.read_dent)
	*(.text.write_dent)
	*(.text.tee_fs_dirfile_open)
	*(.text.tee_fs_dirfile_close)
	*(.text.tee_fs_dirfile_commit_writes)
	*(.text.tee_fs_dirfile_get_tmp)
	*(.text.tee_fs_dirfile_find)
	*(.text.tee_fs_dirfile_fileh_to_fname)
	*(.text.tee_fs_dirfile_rename)
	*(.text.tee_fs_dirfile_remove)
	*(.text.tee_fs_dirfile_update_hash)
	*(.text.tee_fs_dirfile_get_next)
	*(.text.operation_commit)
	*(.text.operation_open_dfh)
	*(.text.tee_fs_rpc_open_dfh)
	*(.text.tee_fs_rpc_create_dfh)
	*(.text.tee_fs_rpc_close)
	*(.text.tee_fs_rpc_read_init)
	*(.text.tee_fs_rpc_read_final)
	*(.text.tee_fs_rpc_write_init)
	*(.text.tee_fs_rpc_write_final)
	*(.text.tee_fs_rpc_truncate)
	*(.text.tee_fs_rpc_remove_dfh)
	*(.text.tee_fs_rpc_cache_clear)
	*(.text.tee_fs_rpc_cache_alloc)
	*(.text.do_hmac)
	*(.text.tee_fs_fek_crypt)
	*(.text.tee_obj_add)
	*(.text.tee_obj_get)
	*(.text.tee_obj_close)
	*(.text.tee_obj_close_all)
	*(.text.tee_obj_alloc)
	*(.text.tee_obj_free)
	*(.text.tee_pobj_check_access)
	*(.text.tee_pobj_get)
	*(.text.tee_pobj_release)
	*(.text.tee_pobj_rename)
	*(.text.tee_time_ta_get_offs)
	*(.text.tee_time_ta_set_offs)
	*(.text.tee_time_get_ta_time)
	*(.text.tee_time_set_ta_time)
	*(.text.io_pa_or_va)
	*(.text.write32)
	*(.text.read32)
	*(.text.chip_to_base)
	*(.text.pl011_flush)
	*(.text.pl011_have_rx_data)
	*(.text.pl011_getchar)
	*(.text.pl011_putc)
	*(.text.gic_read_iar)
	*(.text.gic_write_eoir)
	*(.text.gic_it_handle)
	*(.text.hash_get_ctx_size)
	*(.text.num_bytes)
	*(.text.num_bits)
	*(.text.compare)
	*(.text.bn2bin)
	*(.text.bin2bn)
	*(.text.copy)
	*(.text.ecc_get_keysize)
	*(.text.cipher_get_ctx_size)
	*(.text.mac_get_ctx_size)
	*(.text.authenc_get_ctx_size)
	*(.text.bn_clear)
	*(.text.bn_free)
	*(.text.free_ecc_public_key)
	*(.text.free_rsa_public_key)
	*(.text.bn_allocate)
	*(.text.bn_alloc_max)
	*(.text.alloc_ecc_keypair)
	*(.text.alloc_ecc_public_key)
	*(.text.dsa_verify)
	*(.text.dsa_sign)
	*(.text.tee_algo_to_ltc_hashindex)
	*(.text.rsassa_verify)
	*(.text.hash_update)
	*(.text.hash_init)
	*(.text.rsassa_sign)
	*(.text.rsaes_encrypt)
	*(.text.rsaes_decrypt)
	*(.text.hash_final)
	*(.text.rsadorep)
	*(.text.rsanopad_encrypt)
	*(.text.rsanopad_decrypt)
	*(.text.do_dh_shared_secret)
	*(.text.gen_ecc_key)
	*(.text.gen_dh_key)
	*(.text.gen_dsa_key)
	*(.text.gen_rsa_key)
	*(.text.authenc_final)
	*(.text.tee_algo_to_ltc_cipherindex)
	*(.text.cipher_get_block_size)
	*(.text.cipher_update)
	*(.text.prng_read)
	*(.text.prng_add_entropy)
	*(.text.ecc_populate_ltc_private_key)
	*(.text.alloc_dh_keypair)
	*(.text.alloc_dsa_public_key)
	*(.text.alloc_dsa_keypair)
	*(.text.alloc_rsa_public_key)
	*(.text.alloc_rsa_keypair)
	*(.text.ecc_sign)
	*(.text.get_des2_key)
	*(.text.mac_init)
	*(.text.cipher_init)
	*(.text.authenc_update_aad)
	*(.text.authenc_update_payload)
	*(.text.authenc_dec_final)
	*(.text.authenc_enc_final)
	*(.text.mac_update)
	*(.text.cipher_final)
	*(.text.mac_final)
	*(.text.put_pool)
	*(.text.get_pool)
	*(.text.tee_ltc_init)
	*(.text.ecc_populate_ltc_public_key)
	*(.text.do_ecc_shared_secret)
	*(.text.ecc_verify)
	*(.text.setup_mix)
	*(.text.setup_mix2)
	*(.text.rijndael_test)
	*(.text.rijndael_done)
	*(.text.rijndael_keysize)
	*(.text.rijndael_setup)
	*(.text.rijndael_ecb_encrypt)
	*(.text.rijndael_ecb_decrypt)
	*(.text.desfunc)
	*(.text.des3_test)
	*(.text.des3_done)
	*(.text.des_keysize)
	*(.text.des3_keysize)
	*(.text.deskey)
	*(.text.des_ecb_encrypt)
	*(.text.des_ecb_decrypt)
	*(.text.des3_ecb_encrypt)
	*(.text.des3_ecb_decrypt)
	*(.text.des_setup)
	*(.text.des3_setup)
	*(.text.des_done)
	*(.text.des_test)
	*(.text.ccm_init)
	*(.text.ccm_add_nonce)
	*(.text.ccm_add_aad)
	*(.text.ccm_process)
	*(.text.ccm_done)
	*(.text.ccm_reset)
	*(.text.gcm_add_aad)
	*(.text.gcm_add_iv)
	*(.text.gcm_done)
	*(.text.gcm_init)
	*(.text.gcm_mult_h)
	*(.text.gcm_process)
	*(.text.gcm_reset)
	*(.text.md5_compress)
	*(.text.md5_init)
	*(.text.md5_test)
	*(.text.md5_done)
	*(.text.md5_process)
	*(.text.sha1_compress)
	*(.text.sha1_init)
	*(.text.sha1_test)
	*(.text.sha1_done)
	*(.text.sha1_process)
	*(.text.sha224_init)
	*(.text.sha224_test)
	*(.text.sha224_done)
	*(.text.sha256_compress)
	*(.text.sha256_init)
	*(.text.sha256_test)
	*(.text.sha256_done)
	*(.text.sha256_process)
	*(.text.sha384_init)
	*(.text.sha384_test)
	*(.text.sha384_done)
	*(.text.sha512_compress)
	*(.text.sha512_init)
	*(.text.sha512_test)
	*(.text.sha512_done)
	*(.text.sha512_process)
	*(.text.hmac_done)
	*(.text.hmac_init)
	*(.text.hmac_process)
	*(.text.omac_done)
	*(.text.omac_init)
	*(.text.omac_process)
	*(.text.ltc_init_multi)
	*(.text.ltc_init_multi_size)
	*(.text.ltc_deinit_multi)
	*(.text.zeromem)
	*(.text.cipher_is_valid)
	*(.text.find_cipher)
	*(.text.find_hash)
	*(.text.find_prng)
	*(.text.hash_is_valid)
	*(.text.prng_is_valid)
	*(.text.register_cipher)
	*(.text.register_hash)
	*(.text.register_prng)
	*(.text.cbc_decrypt)
	*(.text.cbc_done)
	*(.text.cbc_encrypt)
	*(.text.cbc_start)
	*(.text.ctr_decrypt)
	*(.text.ctr_done)
	*(.text.ctr_encrypt)
	*(.text.ctr_start)
	*(.text.ecb_decrypt)
	*(.text.ecb_done)
	*(.text.ecb_encrypt)
	*(.text.ecb_start)
	*(.text.tweak_uncrypt)
	*(.text.xts_decrypt)
	*(.text.xts_done)
	*(.text.tweak_crypt)
	*(.text.xts_encrypt)
	*(.text.xts_start)
	*(.text.xts_mult_x)
	*(.text.dsa_free)
	*(.text.dsa_make_key)
	*(.text.dsa_sign_hash_raw)
	*(.text.dsa_verify_hash_raw)
	*(.text.rsa_decrypt_key_ex)
	*(.text.rsa_encrypt_key_ex)
	*(.text.rsa_exptmod)
	*(.text.rsa_free)
	*(.text.rsa_make_key)
	*(.text.rsa_sign_hash_ex)
	*(.text.rsa_verify_hash_ex)
	*(.text.dh_make_key)
	*(.text.dh_free)
	*(.text.dh_shared_secret)
	*(.text.ecc_free)
	*(.text.ecc_make_key_ex)
	*(.text.ecc_make_key)
	*(.text.ecc_shared_secret)
	*(.text.ecc_sign_hash_raw)
	*(.text.ecc_verify_hash_raw)
	*(.text.ltc_ecc_is_valid_idx)
	*(.text.ltc_ecc_new_point)
	*(.text.ltc_ecc_del_point)
	*(.text.fortuna_update_iv)
	*(.text.fortuna_test)
	*(.text.fortuna_reseed)
	*(.text.fortuna_ready)
	*(.text.fortuna_start)
	*(.text.fortuna_done)
	*(.text.fortuna_add_entropy)
	*(.text.fortuna_import)
	*(.text.fortuna_read)
	*(.text.fortuna_export)
	*(.text.get_digit)
	*(.text.get_digit_count)
	*(.text.rand)
	*(.text.montgomery_deinit)
	*(.text.compare_d)
	*(.text.div_2)
	*(.text.unsigned_read)
	*(.text.read_radix)
	*(.text.get_int)
	*(.text.set_int)
	*(.text.neg)
	*(.text.deinit_mpanum)
	*(.text.deinit)
	*(.text.twoexpt)
	*(.text.isprime)
	*(.text.montgomery_normalization)
	*(.text.mod)
	*(.text.invmod)
	*(.text.mulmod)
	*(.text.sqrmod)
	*(.text.add)
	*(.text.gcd)
	*(.text.divide)
	*(.text.sqr)
	*(.text.mul)
	*(.text.muli)
	*(.text.subi)
	*(.text.sub)
	*(.text.addi)
	*(.text.write_radix)
	*(.text.count_lsb_bits)
	*(.text.count_bits)
	*(.text.montgomery_setup)
	*(.text.unsigned_size)
	*(.text.unsigned_write)
	*(.text.montgomery_reduce)
	*(.text.init_size)
	*(.text.init)
	*(.text.init_copy)
	*(.text.exptmod)
	*(.text.lcm)
	*(.text.modi)
	*(.text.init_mpa_tomcrypt)
	*(.text.gcm_gf_mult)
	*(.text.hash_memory)
	*(.text.rand_prime)
	*(.text.rand_bn_bits)
	*(.text.der_decode_sequence_ex)
	*(.text.der_encode_sequence_ex)
	*(.text.der_length_sequence)
	*(.text.qsort_helper)
	*(.text.der_encode_set)
	*(.text.der_encode_setof)
	*(.text.der_decode_short_integer)
	*(.text.der_encode_short_integer)
	*(.text.der_length_short_integer)
	*(.text.char_to_int)
	*(.text.der_decode_utctime)
	*(.text.der_encode_utctime)
	*(.text.der_length_utctime)
	*(.text.der_decode_utf8_string)
	*(.text.der_encode_utf8_string)
	*(.text.der_utf8_charsize)
	*(.text.der_length_utf8_string)
	*(.text.der_decode_teletex_string)
	*(.text.der_teletex_char_encode)
	*(.text.der_teletex_value_decode)
	*(.text.der_length_teletex_string)
	*(.text.pkcs_1_oaep_decode)
	*(.text.pkcs_1_oaep_encode)
	*(.text.pkcs_1_pss_decode)
	*(.text.pkcs_1_pss_encode)
	*(.text.pkcs_1_v1_5_decode)
	*(.text.pkcs_1_v1_5_encode)
	*(.text.ltc_ecc_map)
	*(.text.ltc_ecc_mulmod)
	*(.text.ltc_ecc_mul2add)
	*(.text.ltc_ecc_projective_add_point)
	*(.text.ltc_ecc_projective_dbl_point)
	*(.text.der_decode_bit_string)
	*(.text.der_encode_bit_string)
	*(.text.der_length_bit_string)
	*(.text.der_decode_raw_bit_string)
	*(.text.der_encode_raw_bit_string)
	*(.text.der_decode_boolean)
	*(.text.der_encode_boolean)
	*(.text.der_length_boolean)
	*(.text.der_decode_choice)
	*(.text.der_decode_ia5_string)
	*(.text.der_encode_ia5_string)
	*(.text.der_ia5_char_encode)
	*(.text.der_ia5_value_decode)
	*(.text.der_length_ia5_string)
	*(.text.der_decode_integer)
	*(.text.der_encode_integer)
	*(.text.der_length_integer)
	*(.text.der_decode_object_identifier)
	*(.text.der_encode_object_identifier)
	*(.text.der_object_identifier_bits)
	*(.text.der_length_object_identifier)
	*(.text.der_decode_octet_string)
	*(.text.der_encode_octet_string)
	*(.text.der_length_octet_string)
	*(.text.der_decode_printable_string)
	*(.text.der_encode_printable_string)
	*(.text.der_printable_char_encode)
	*(.text.der_printable_value_decode)
	*(.text.der_length_printable_string)
	*(.text.pkcs_1_mgf1)
	*(.text.__mpa_set_unused_digits_to_zero)
	*(.text.mpa_wipe)
	*(.text.mpa_copy)
	*(.text.mpa_highest_bit_index)
	*(.text.mpa_get_bit)
	*(.text.mpa_parity)
	*(.text.mpa_constant_one)
	*(.text.__mpa_montgomery_mul_add)
	*(.text.__mpa_montgomery_sub_ack)
	*(.text.__mpa_montgomery_mul)
	*(.text.mpa_compute_fmm_context)
	*(.text.mpa_montgomery_mul)
	*(.text.mpa_is_prob_prime)
	*(.text.check_table)
	*(.text.is_small_prime)
	*(.text.has_small_factors)
	*(.text.primality_test_miller_rabin)
	*(.text.mpa_set_S32)
	*(.text.mpa_set_word)
	*(.text.mpa_get_word)
	*(.text.__mpa_soft_div)
	*(.text.__mpa_div_dword)
	*(.text.__mpa_div_q_r_internal)
	*(.text.__mpa_div_q_r_internal_word)
	*(.text.__mpa_div_q_r)
	*(.text.mpa_div)
	*(.text.__mpa_divby2)
	*(.text.__mpa_egcd)
	*(.text.__mpa_gcd)
	*(.text.mpa_gcd)
	*(.text.mpa_extended_gcd)
	*(.text.mpa_init_scratch_mem_sync)
	*(.text.mpa_alloc_static_temp_var_size)
	*(.text.mpa_alloc_static_temp_var)
	*(.text.mpa_free_static_temp_var)
	*(.text.__mpa_mul_add_word)
	*(.text.__mpa_mul_add_word_cum)
	*(.text.__mpa_abs_mul_word)
	*(.text.__mpa_abs_mul)
	*(.text.mpa_mul)
	*(.text.mpa_mul_word)
	*(.text.mpa_set_random_generator)
	*(.text.get_random_byte)
	*(.text.mpa_get_random)
	*(.text.mpa_get_random_digits)
	*(.text.__mpa_shift_words_left)
	*(.text.__mpa_shift_words_right)
	*(.text.mpa_shift_left)
	*(.text.mpa_shift_right)
	*(.text.__mpa_full_adder)
	*(.text.__mpa_full_sub)
	*(.text.__mpa_abs_add)
	*(.text.__mpa_abs_sub)
	*(.text.mpa_add)
	*(.text.mpa_sub)
	*(.text.mpa_neg)
	*(.text.mpa_add_word)
	*(.text.mpa_sub_word)
	*(.text.__mpa_abs_cmp)
	*(.text.__mpa_abs_greater_than)
	*(.text.mpa_cmp)
	*(.text.mpa_cmp_short)
	*(.text.mpa_exp_mod)
	*(.text.mpa_init_static)
	*(.text.mpa_init_static_fmm_context)
	*(.text.__mpa_isspace)
	*(.text.__mpa_is_char_in_base)
	*(.text.__mpa_digit_value)
	*(.text.__mpa_digitstr_to_binary_wsize_base_16)
	*(.text.__mpa_nibble_to_char)
	*(.text.__mpa_word_to_hexstr)
	*(.text.__mpa_mpanum_to_hexstr)
	*(.text.__mpa_count_leading_zero_bits)
	*(.text.__mpa_size_in_base_255)
	*(.text.mpa_set_str)
	*(.text.mpa_get_str)
	*(.text.set_word)
	*(.text.mpa_set_oct_str)
	*(.text.get_word)
	*(.text.mpa_get_oct_str)
	*(.text.mpa_mod)
	*(.text.mpa_mul_mod)
	*(.text.mpa_inv_mod)
	*(.text.asan_tag_access)
	*(.text.asan_tag_heap_free)
	*(.text.malloc_lock)
	*(.text.malloc_unlock)
	*(.text.tag_asan_free)
	*(.text.tag_asan_alloced)
	*(.text.bget)
	*(.text.bgetz)
	*(.text.bgetr)
	*(.text.brel)
	*(.text.raw_malloc_return_hook)
	*(.text.malloc_reset_stats)
	*(.text.malloc_get_stats)
	*(.text.raw_malloc_validate_pools)
	*(.text.bpool_foreach_iterator_init)
	*(.text.bpool_foreach_pool)
	*(.text.bpool_foreach)
	*(.text.raw_malloc)
	*(.text.raw_free)
	*(.text.raw_calloc)
	*(.text.raw_realloc)
	*(.text.create_free_block)
	*(.text.brel_before)
	*(.text.brel_after)
	*(.text.raw_memalign)
	*(.text.bget_buf_size)
	*(.text.malloc)
	*(.text.free)
	*(.text.calloc)
	*(.text.realloc_unlocked)
	*(.text.realloc)
	*(.text.memalign)
	*(.text.get_payload_start_size)
	*(.text.malloc_buffer_is_within_alloced)
	*(.text.malloc_buffer_overlaps_heap)
	*(.text.snprintf)
	*(.text.swapfunc)
	*(.text.med3)
	*(.text.qsort)
	*(.text.memcmp)
	*(.text.memcpy)
	*(.text.memset)
	*(.text.strcmp)
	*(.text.strlen)
	*(.text.snprintk)
	*(.text.vsnprintk)
	*(.text.__vsnprintf)
	*(.text.uuid2str)
	*(.text.kprintf)
	*(.text.strlcpy)
	*(.text.buf_compare_ct)
	*(.text.trace_level_to_string)
	*(.text.trace_printf)
	*(.text.memchr)
